Terminals unused in grammar

   ERROR


State 103 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: decllist

    2 decllist: decllist decl
    3         | decl

    4 decl: vardecl
    5     | fundecl

    6 forid: ID

    7 fornum: NUM

    8 vardecl: typespec forid SEMI
    9        | typespec forid LBRACE fornum RBRACE SEMI

   10 typespec: INT
   11         | VOID

   12 @1: %empty

   13 fundecl: typespec forid @1 LPAREN params RPAREN compstmt

   14 params: paramlist
   15       | VOID

   16 paramlist: paramlist COMMA param
   17          | param

   18 param: typespec forid
   19      | typespec forid LBRACE RBRACE

   20 compstmt: LCURLY localdecls stmtlist RCURLY

   21 localdecls: localdecls vardecl
   22           | %empty

   23 stmtlist: stmtlist stmt
   24         | %empty

   25 stmt: expstmt
   26     | compstmt
   27     | selstmt
   28     | iterstmt
   29     | retstmt

   30 expstmt: exp SEMI
   31        | SEMI

   32 selstmt: IF LPAREN exp RPAREN stmt
   33        | IF LPAREN exp RPAREN stmt ELSE stmt

   34 iterstmt: WHILE LPAREN exp RPAREN stmt

   35 retstmt: RETURN SEMI
   36        | RETURN exp SEMI

   37 exp: var ASSIGN exp
   38    | simpleexp

   39 var: forid

   40 @2: %empty

   41 var: forid @2 LBRACE exp RBRACE

   42 simpleexp: addexp LE addexp
   43          | addexp LT addexp
   44          | addexp GT addexp
   45          | addexp GE addexp
   46          | addexp EQ addexp
   47          | addexp NE addexp
   48          | addexp

   49 addexp: addexp PLUS term
   50       | addexp MINUS term
   51       | term

   52 term: term TIMES factor
   53     | term OVER factor
   54     | factor

   55 factor: LPAREN exp RPAREN
   56       | var
   57       | call
   58       | NUM

   59 @3: %empty

   60 call: forid @3 LPAREN args RPAREN

   61 args: arg_list
   62     | %empty

   63 arg_list: arg_list COMMA exp
   64         | exp


Terminals, with rules where they appear

$end (0) 0
error (256)
ELSE (258) 33
IF (259) 32 33
INT (260) 10
RETURN (261) 35 36
VOID (262) 11 15
WHILE (263) 34
ID (264) 6
NUM (265) 7 58
PLUS (266) 49
MINUS (267) 50
TIMES (268) 52
OVER (269) 53
LT (270) 43
LE (271) 42
GT (272) 44
GE (273) 45
EQ (274) 46
NE (275) 47
ASSIGN (276) 37
SEMI (277) 8 9 30 31 35 36
COMMA (278) 16 63
LBRACE (279) 9 19 41
RBRACE (280) 9 19 41
LCURLY (281) 20
RCURLY (282) 20
LPAREN (283) 13 32 33 34 55 60
RPAREN (284) 13 32 33 34 55 60
ERROR (285)


Nonterminals, with rules where they appear

$accept (31)
    on left: 0
program (32)
    on left: 1, on right: 0
decllist (33)
    on left: 2 3, on right: 1 2
decl (34)
    on left: 4 5, on right: 2 3
forid (35)
    on left: 6, on right: 8 9 13 18 19 39 41 60
fornum (36)
    on left: 7, on right: 9
vardecl (37)
    on left: 8 9, on right: 4 21
typespec (38)
    on left: 10 11, on right: 8 9 13 18 19
fundecl (39)
    on left: 13, on right: 5
@1 (40)
    on left: 12, on right: 13
params (41)
    on left: 14 15, on right: 13
paramlist (42)
    on left: 16 17, on right: 14 16
param (43)
    on left: 18 19, on right: 16 17
compstmt (44)
    on left: 20, on right: 13 26
localdecls (45)
    on left: 21 22, on right: 20 21
stmtlist (46)
    on left: 23 24, on right: 20 23
stmt (47)
    on left: 25 26 27 28 29, on right: 23 32 33 34
expstmt (48)
    on left: 30 31, on right: 25
selstmt (49)
    on left: 32 33, on right: 27
iterstmt (50)
    on left: 34, on right: 28
retstmt (51)
    on left: 35 36, on right: 29
exp (52)
    on left: 37 38, on right: 30 32 33 34 36 37 41 55 63 64
var (53)
    on left: 39 41, on right: 37 56
@2 (54)
    on left: 40, on right: 41
simpleexp (55)
    on left: 42 43 44 45 46 47 48, on right: 38
addexp (56)
    on left: 49 50 51, on right: 42 43 44 45 46 47 48 49 50
term (57)
    on left: 52 53 54, on right: 49 50 51 52 53
factor (58)
    on left: 55 56 57 58, on right: 52 53 54
call (59)
    on left: 60, on right: 57
@3 (60)
    on left: 59, on right: 60
args (61)
    on left: 61 62, on right: 60
arg_list (62)
    on left: 63 64, on right: 61 63


State 0

    0 $accept: . program $end

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    program   go to state 3
    decllist  go to state 4
    decl      go to state 5
    vardecl   go to state 6
    typespec  go to state 7
    fundecl   go to state 8


State 1

   10 typespec: INT .

    $default  reduce using rule 10 (typespec)


State 2

   11 typespec: VOID .

    $default  reduce using rule 11 (typespec)


State 3

    0 $accept: program . $end

    $end  shift, and go to state 9


State 4

    1 program: decllist .
    2 decllist: decllist . decl

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    $default  reduce using rule 1 (program)

    decl      go to state 10
    vardecl   go to state 6
    typespec  go to state 7
    fundecl   go to state 8


State 5

    3 decllist: decl .

    $default  reduce using rule 3 (decllist)


State 6

    4 decl: vardecl .

    $default  reduce using rule 4 (decl)


State 7

    8 vardecl: typespec . forid SEMI
    9        | typespec . forid LBRACE fornum RBRACE SEMI
   13 fundecl: typespec . forid @1 LPAREN params RPAREN compstmt

    ID  shift, and go to state 11

    forid  go to state 12


State 8

    5 decl: fundecl .

    $default  reduce using rule 5 (decl)


State 9

    0 $accept: program $end .

    $default  accept


State 10

    2 decllist: decllist decl .

    $default  reduce using rule 2 (decllist)


State 11

    6 forid: ID .

    $default  reduce using rule 6 (forid)


State 12

    8 vardecl: typespec forid . SEMI
    9        | typespec forid . LBRACE fornum RBRACE SEMI
   13 fundecl: typespec forid . @1 LPAREN params RPAREN compstmt

    SEMI    shift, and go to state 13
    LBRACE  shift, and go to state 14

    $default  reduce using rule 12 (@1)

    @1  go to state 15


State 13

    8 vardecl: typespec forid SEMI .

    $default  reduce using rule 8 (vardecl)


State 14

    9 vardecl: typespec forid LBRACE . fornum RBRACE SEMI

    NUM  shift, and go to state 16

    fornum  go to state 17


State 15

   13 fundecl: typespec forid @1 . LPAREN params RPAREN compstmt

    LPAREN  shift, and go to state 18


State 16

    7 fornum: NUM .

    $default  reduce using rule 7 (fornum)


State 17

    9 vardecl: typespec forid LBRACE fornum . RBRACE SEMI

    RBRACE  shift, and go to state 19


State 18

   13 fundecl: typespec forid @1 LPAREN . params RPAREN compstmt

    INT   shift, and go to state 1
    VOID  shift, and go to state 20

    typespec   go to state 21
    params     go to state 22
    paramlist  go to state 23
    param      go to state 24


State 19

    9 vardecl: typespec forid LBRACE fornum RBRACE . SEMI

    SEMI  shift, and go to state 25


State 20

   11 typespec: VOID .
   15 params: VOID .

    RPAREN    reduce using rule 15 (params)
    $default  reduce using rule 11 (typespec)


State 21

   18 param: typespec . forid
   19      | typespec . forid LBRACE RBRACE

    ID  shift, and go to state 11

    forid  go to state 26


State 22

   13 fundecl: typespec forid @1 LPAREN params . RPAREN compstmt

    RPAREN  shift, and go to state 27


State 23

   14 params: paramlist .
   16 paramlist: paramlist . COMMA param

    COMMA  shift, and go to state 28

    $default  reduce using rule 14 (params)


State 24

   17 paramlist: param .

    $default  reduce using rule 17 (paramlist)


State 25

    9 vardecl: typespec forid LBRACE fornum RBRACE SEMI .

    $default  reduce using rule 9 (vardecl)


State 26

   18 param: typespec forid .
   19      | typespec forid . LBRACE RBRACE

    LBRACE  shift, and go to state 29

    $default  reduce using rule 18 (param)


State 27

   13 fundecl: typespec forid @1 LPAREN params RPAREN . compstmt

    LCURLY  shift, and go to state 30

    compstmt  go to state 31


State 28

   16 paramlist: paramlist COMMA . param

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    typespec  go to state 21
    param     go to state 32


State 29

   19 param: typespec forid LBRACE . RBRACE

    RBRACE  shift, and go to state 33


State 30

   20 compstmt: LCURLY . localdecls stmtlist RCURLY

    $default  reduce using rule 22 (localdecls)

    localdecls  go to state 34


State 31

   13 fundecl: typespec forid @1 LPAREN params RPAREN compstmt .

    $default  reduce using rule 13 (fundecl)


State 32

   16 paramlist: paramlist COMMA param .

    $default  reduce using rule 16 (paramlist)


State 33

   19 param: typespec forid LBRACE RBRACE .

    $default  reduce using rule 19 (param)


State 34

   20 compstmt: LCURLY localdecls . stmtlist RCURLY
   21 localdecls: localdecls . vardecl

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    $default  reduce using rule 24 (stmtlist)

    vardecl   go to state 35
    typespec  go to state 36
    stmtlist  go to state 37


State 35

   21 localdecls: localdecls vardecl .

    $default  reduce using rule 21 (localdecls)


State 36

    8 vardecl: typespec . forid SEMI
    9        | typespec . forid LBRACE fornum RBRACE SEMI

    ID  shift, and go to state 11

    forid  go to state 38


State 37

   20 compstmt: LCURLY localdecls stmtlist . RCURLY
   23 stmtlist: stmtlist . stmt

    IF      shift, and go to state 39
    RETURN  shift, and go to state 40
    WHILE   shift, and go to state 41
    ID      shift, and go to state 11
    NUM     shift, and go to state 42
    SEMI    shift, and go to state 43
    LCURLY  shift, and go to state 30
    RCURLY  shift, and go to state 44
    LPAREN  shift, and go to state 45

    forid      go to state 46
    compstmt   go to state 47
    stmt       go to state 48
    expstmt    go to state 49
    selstmt    go to state 50
    iterstmt   go to state 51
    retstmt    go to state 52
    exp        go to state 53
    var        go to state 54
    simpleexp  go to state 55
    addexp     go to state 56
    term       go to state 57
    factor     go to state 58
    call       go to state 59


State 38

    8 vardecl: typespec forid . SEMI
    9        | typespec forid . LBRACE fornum RBRACE SEMI

    SEMI    shift, and go to state 13
    LBRACE  shift, and go to state 14


State 39

   32 selstmt: IF . LPAREN exp RPAREN stmt
   33        | IF . LPAREN exp RPAREN stmt ELSE stmt

    LPAREN  shift, and go to state 60


State 40

   35 retstmt: RETURN . SEMI
   36        | RETURN . exp SEMI

    ID      shift, and go to state 11
    NUM     shift, and go to state 42
    SEMI    shift, and go to state 61
    LPAREN  shift, and go to state 45

    forid      go to state 46
    exp        go to state 62
    var        go to state 54
    simpleexp  go to state 55
    addexp     go to state 56
    term       go to state 57
    factor     go to state 58
    call       go to state 59


State 41

   34 iterstmt: WHILE . LPAREN exp RPAREN stmt

    LPAREN  shift, and go to state 63


State 42

   58 factor: NUM .

    $default  reduce using rule 58 (factor)


State 43

   31 expstmt: SEMI .

    $default  reduce using rule 31 (expstmt)


State 44

   20 compstmt: LCURLY localdecls stmtlist RCURLY .

    $default  reduce using rule 20 (compstmt)


State 45

   55 factor: LPAREN . exp RPAREN

    ID      shift, and go to state 11
    NUM     shift, and go to state 42
    LPAREN  shift, and go to state 45

    forid      go to state 46
    exp        go to state 64
    var        go to state 54
    simpleexp  go to state 55
    addexp     go to state 56
    term       go to state 57
    factor     go to state 58
    call       go to state 59


State 46

   39 var: forid .
   41    | forid . @2 LBRACE exp RBRACE
   60 call: forid . @3 LPAREN args RPAREN

    LBRACE    reduce using rule 40 (@2)
    LPAREN    reduce using rule 59 (@3)
    $default  reduce using rule 39 (var)

    @2  go to state 65
    @3  go to state 66


State 47

   26 stmt: compstmt .

    $default  reduce using rule 26 (stmt)


State 48

   23 stmtlist: stmtlist stmt .

    $default  reduce using rule 23 (stmtlist)


State 49

   25 stmt: expstmt .

    $default  reduce using rule 25 (stmt)


State 50

   27 stmt: selstmt .

    $default  reduce using rule 27 (stmt)


State 51

   28 stmt: iterstmt .

    $default  reduce using rule 28 (stmt)


State 52

   29 stmt: retstmt .

    $default  reduce using rule 29 (stmt)


State 53

   30 expstmt: exp . SEMI

    SEMI  shift, and go to state 67


State 54

   37 exp: var . ASSIGN exp
   56 factor: var .

    ASSIGN  shift, and go to state 68

    $default  reduce using rule 56 (factor)


State 55

   38 exp: simpleexp .

    $default  reduce using rule 38 (exp)


State 56

   42 simpleexp: addexp . LE addexp
   43          | addexp . LT addexp
   44          | addexp . GT addexp
   45          | addexp . GE addexp
   46          | addexp . EQ addexp
   47          | addexp . NE addexp
   48          | addexp .
   49 addexp: addexp . PLUS term
   50       | addexp . MINUS term

    PLUS   shift, and go to state 69
    MINUS  shift, and go to state 70
    LT     shift, and go to state 71
    LE     shift, and go to state 72
    GT     shift, and go to state 73
    GE     shift, and go to state 74
    EQ     shift, and go to state 75
    NE     shift, and go to state 76

    $default  reduce using rule 48 (simpleexp)


State 57

   51 addexp: term .
   52 term: term . TIMES factor
   53     | term . OVER factor

    TIMES  shift, and go to state 77
    OVER   shift, and go to state 78

    $default  reduce using rule 51 (addexp)


State 58

   54 term: factor .

    $default  reduce using rule 54 (term)


State 59

   57 factor: call .

    $default  reduce using rule 57 (factor)


State 60

   32 selstmt: IF LPAREN . exp RPAREN stmt
   33        | IF LPAREN . exp RPAREN stmt ELSE stmt

    ID      shift, and go to state 11
    NUM     shift, and go to state 42
    LPAREN  shift, and go to state 45

    forid      go to state 46
    exp        go to state 79
    var        go to state 54
    simpleexp  go to state 55
    addexp     go to state 56
    term       go to state 57
    factor     go to state 58
    call       go to state 59


State 61

   35 retstmt: RETURN SEMI .

    $default  reduce using rule 35 (retstmt)


State 62

   36 retstmt: RETURN exp . SEMI

    SEMI  shift, and go to state 80


State 63

   34 iterstmt: WHILE LPAREN . exp RPAREN stmt

    ID      shift, and go to state 11
    NUM     shift, and go to state 42
    LPAREN  shift, and go to state 45

    forid      go to state 46
    exp        go to state 81
    var        go to state 54
    simpleexp  go to state 55
    addexp     go to state 56
    term       go to state 57
    factor     go to state 58
    call       go to state 59


State 64

   55 factor: LPAREN exp . RPAREN

    RPAREN  shift, and go to state 82


State 65

   41 var: forid @2 . LBRACE exp RBRACE

    LBRACE  shift, and go to state 83


State 66

   60 call: forid @3 . LPAREN args RPAREN

    LPAREN  shift, and go to state 84


State 67

   30 expstmt: exp SEMI .

    $default  reduce using rule 30 (expstmt)


State 68

   37 exp: var ASSIGN . exp

    ID      shift, and go to state 11
    NUM     shift, and go to state 42
    LPAREN  shift, and go to state 45

    forid      go to state 46
    exp        go to state 85
    var        go to state 54
    simpleexp  go to state 55
    addexp     go to state 56
    term       go to state 57
    factor     go to state 58
    call       go to state 59


State 69

   49 addexp: addexp PLUS . term

    ID      shift, and go to state 11
    NUM     shift, and go to state 42
    LPAREN  shift, and go to state 45

    forid   go to state 46
    var     go to state 86
    term    go to state 87
    factor  go to state 58
    call    go to state 59


State 70

   50 addexp: addexp MINUS . term

    ID      shift, and go to state 11
    NUM     shift, and go to state 42
    LPAREN  shift, and go to state 45

    forid   go to state 46
    var     go to state 86
    term    go to state 88
    factor  go to state 58
    call    go to state 59


State 71

   43 simpleexp: addexp LT . addexp

    ID      shift, and go to state 11
    NUM     shift, and go to state 42
    LPAREN  shift, and go to state 45

    forid   go to state 46
    var     go to state 86
    addexp  go to state 89
    term    go to state 57
    factor  go to state 58
    call    go to state 59


State 72

   42 simpleexp: addexp LE . addexp

    ID      shift, and go to state 11
    NUM     shift, and go to state 42
    LPAREN  shift, and go to state 45

    forid   go to state 46
    var     go to state 86
    addexp  go to state 90
    term    go to state 57
    factor  go to state 58
    call    go to state 59


State 73

   44 simpleexp: addexp GT . addexp

    ID      shift, and go to state 11
    NUM     shift, and go to state 42
    LPAREN  shift, and go to state 45

    forid   go to state 46
    var     go to state 86
    addexp  go to state 91
    term    go to state 57
    factor  go to state 58
    call    go to state 59


State 74

   45 simpleexp: addexp GE . addexp

    ID      shift, and go to state 11
    NUM     shift, and go to state 42
    LPAREN  shift, and go to state 45

    forid   go to state 46
    var     go to state 86
    addexp  go to state 92
    term    go to state 57
    factor  go to state 58
    call    go to state 59


State 75

   46 simpleexp: addexp EQ . addexp

    ID      shift, and go to state 11
    NUM     shift, and go to state 42
    LPAREN  shift, and go to state 45

    forid   go to state 46
    var     go to state 86
    addexp  go to state 93
    term    go to state 57
    factor  go to state 58
    call    go to state 59


State 76

   47 simpleexp: addexp NE . addexp

    ID      shift, and go to state 11
    NUM     shift, and go to state 42
    LPAREN  shift, and go to state 45

    forid   go to state 46
    var     go to state 86
    addexp  go to state 94
    term    go to state 57
    factor  go to state 58
    call    go to state 59


State 77

   52 term: term TIMES . factor

    ID      shift, and go to state 11
    NUM     shift, and go to state 42
    LPAREN  shift, and go to state 45

    forid   go to state 46
    var     go to state 86
    factor  go to state 95
    call    go to state 59


State 78

   53 term: term OVER . factor

    ID      shift, and go to state 11
    NUM     shift, and go to state 42
    LPAREN  shift, and go to state 45

    forid   go to state 46
    var     go to state 86
    factor  go to state 96
    call    go to state 59


State 79

   32 selstmt: IF LPAREN exp . RPAREN stmt
   33        | IF LPAREN exp . RPAREN stmt ELSE stmt

    RPAREN  shift, and go to state 97


State 80

   36 retstmt: RETURN exp SEMI .

    $default  reduce using rule 36 (retstmt)


State 81

   34 iterstmt: WHILE LPAREN exp . RPAREN stmt

    RPAREN  shift, and go to state 98


State 82

   55 factor: LPAREN exp RPAREN .

    $default  reduce using rule 55 (factor)


State 83

   41 var: forid @2 LBRACE . exp RBRACE

    ID      shift, and go to state 11
    NUM     shift, and go to state 42
    LPAREN  shift, and go to state 45

    forid      go to state 46
    exp        go to state 99
    var        go to state 54
    simpleexp  go to state 55
    addexp     go to state 56
    term       go to state 57
    factor     go to state 58
    call       go to state 59


State 84

   60 call: forid @3 LPAREN . args RPAREN

    ID      shift, and go to state 11
    NUM     shift, and go to state 42
    LPAREN  shift, and go to state 45

    $default  reduce using rule 62 (args)

    forid      go to state 46
    exp        go to state 100
    var        go to state 54
    simpleexp  go to state 55
    addexp     go to state 56
    term       go to state 57
    factor     go to state 58
    call       go to state 59
    args       go to state 101
    arg_list   go to state 102


State 85

   37 exp: var ASSIGN exp .

    $default  reduce using rule 37 (exp)


State 86

   56 factor: var .

    $default  reduce using rule 56 (factor)


State 87

   49 addexp: addexp PLUS term .
   52 term: term . TIMES factor
   53     | term . OVER factor

    TIMES  shift, and go to state 77
    OVER   shift, and go to state 78

    $default  reduce using rule 49 (addexp)


State 88

   50 addexp: addexp MINUS term .
   52 term: term . TIMES factor
   53     | term . OVER factor

    TIMES  shift, and go to state 77
    OVER   shift, and go to state 78

    $default  reduce using rule 50 (addexp)


State 89

   43 simpleexp: addexp LT addexp .
   49 addexp: addexp . PLUS term
   50       | addexp . MINUS term

    PLUS   shift, and go to state 69
    MINUS  shift, and go to state 70

    $default  reduce using rule 43 (simpleexp)


State 90

   42 simpleexp: addexp LE addexp .
   49 addexp: addexp . PLUS term
   50       | addexp . MINUS term

    PLUS   shift, and go to state 69
    MINUS  shift, and go to state 70

    $default  reduce using rule 42 (simpleexp)


State 91

   44 simpleexp: addexp GT addexp .
   49 addexp: addexp . PLUS term
   50       | addexp . MINUS term

    PLUS   shift, and go to state 69
    MINUS  shift, and go to state 70

    $default  reduce using rule 44 (simpleexp)


State 92

   45 simpleexp: addexp GE addexp .
   49 addexp: addexp . PLUS term
   50       | addexp . MINUS term

    PLUS   shift, and go to state 69
    MINUS  shift, and go to state 70

    $default  reduce using rule 45 (simpleexp)


State 93

   46 simpleexp: addexp EQ addexp .
   49 addexp: addexp . PLUS term
   50       | addexp . MINUS term

    PLUS   shift, and go to state 69
    MINUS  shift, and go to state 70

    $default  reduce using rule 46 (simpleexp)


State 94

   47 simpleexp: addexp NE addexp .
   49 addexp: addexp . PLUS term
   50       | addexp . MINUS term

    PLUS   shift, and go to state 69
    MINUS  shift, and go to state 70

    $default  reduce using rule 47 (simpleexp)


State 95

   52 term: term TIMES factor .

    $default  reduce using rule 52 (term)


State 96

   53 term: term OVER factor .

    $default  reduce using rule 53 (term)


State 97

   32 selstmt: IF LPAREN exp RPAREN . stmt
   33        | IF LPAREN exp RPAREN . stmt ELSE stmt

    IF      shift, and go to state 39
    RETURN  shift, and go to state 40
    WHILE   shift, and go to state 41
    ID      shift, and go to state 11
    NUM     shift, and go to state 42
    SEMI    shift, and go to state 43
    LCURLY  shift, and go to state 30
    LPAREN  shift, and go to state 45

    forid      go to state 46
    compstmt   go to state 47
    stmt       go to state 103
    expstmt    go to state 49
    selstmt    go to state 50
    iterstmt   go to state 51
    retstmt    go to state 52
    exp        go to state 53
    var        go to state 54
    simpleexp  go to state 55
    addexp     go to state 56
    term       go to state 57
    factor     go to state 58
    call       go to state 59


State 98

   34 iterstmt: WHILE LPAREN exp RPAREN . stmt

    IF      shift, and go to state 39
    RETURN  shift, and go to state 40
    WHILE   shift, and go to state 41
    ID      shift, and go to state 11
    NUM     shift, and go to state 42
    SEMI    shift, and go to state 43
    LCURLY  shift, and go to state 30
    LPAREN  shift, and go to state 45

    forid      go to state 46
    compstmt   go to state 47
    stmt       go to state 104
    expstmt    go to state 49
    selstmt    go to state 50
    iterstmt   go to state 51
    retstmt    go to state 52
    exp        go to state 53
    var        go to state 54
    simpleexp  go to state 55
    addexp     go to state 56
    term       go to state 57
    factor     go to state 58
    call       go to state 59


State 99

   41 var: forid @2 LBRACE exp . RBRACE

    RBRACE  shift, and go to state 105


State 100

   64 arg_list: exp .

    $default  reduce using rule 64 (arg_list)


State 101

   60 call: forid @3 LPAREN args . RPAREN

    RPAREN  shift, and go to state 106


State 102

   61 args: arg_list .
   63 arg_list: arg_list . COMMA exp

    COMMA  shift, and go to state 107

    $default  reduce using rule 61 (args)


State 103

   32 selstmt: IF LPAREN exp RPAREN stmt .
   33        | IF LPAREN exp RPAREN stmt . ELSE stmt

    ELSE  shift, and go to state 108

    ELSE      [reduce using rule 32 (selstmt)]
    $default  reduce using rule 32 (selstmt)


State 104

   34 iterstmt: WHILE LPAREN exp RPAREN stmt .

    $default  reduce using rule 34 (iterstmt)


State 105

   41 var: forid @2 LBRACE exp RBRACE .

    $default  reduce using rule 41 (var)


State 106

   60 call: forid @3 LPAREN args RPAREN .

    $default  reduce using rule 60 (call)


State 107

   63 arg_list: arg_list COMMA . exp

    ID      shift, and go to state 11
    NUM     shift, and go to state 42
    LPAREN  shift, and go to state 45

    forid      go to state 46
    exp        go to state 109
    var        go to state 54
    simpleexp  go to state 55
    addexp     go to state 56
    term       go to state 57
    factor     go to state 58
    call       go to state 59


State 108

   33 selstmt: IF LPAREN exp RPAREN stmt ELSE . stmt

    IF      shift, and go to state 39
    RETURN  shift, and go to state 40
    WHILE   shift, and go to state 41
    ID      shift, and go to state 11
    NUM     shift, and go to state 42
    SEMI    shift, and go to state 43
    LCURLY  shift, and go to state 30
    LPAREN  shift, and go to state 45

    forid      go to state 46
    compstmt   go to state 47
    stmt       go to state 110
    expstmt    go to state 49
    selstmt    go to state 50
    iterstmt   go to state 51
    retstmt    go to state 52
    exp        go to state 53
    var        go to state 54
    simpleexp  go to state 55
    addexp     go to state 56
    term       go to state 57
    factor     go to state 58
    call       go to state 59


State 109

   63 arg_list: arg_list COMMA exp .

    $default  reduce using rule 63 (arg_list)


State 110

   33 selstmt: IF LPAREN exp RPAREN stmt ELSE stmt .

    $default  reduce using rule 33 (selstmt)
