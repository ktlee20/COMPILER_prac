p *t
p *t->child[0]
s
n
p t->attr.name
n
s
s
p i
p *t
n
p *t
n
p i
s
p t->child
p i
p *t->child[0]
p i
n
s
p *t
n
p i
s
p i
p t->child
p t->child[1]
p *t->child[1]
n
p *t
n
n
s
p i
s
p i
p t->child
s
p *t
s
p *t
s
p i
p t->child
n
s
p *t
p *t->child[0]
m
n
p i
p *t
n
s
p *t
s
p *t
s
p t->attr.name
n
n
s
p i
s
p i
p t->child
n
p *t
n
s
p i
s
p i
p *t->child[1]
p i
n
p *t
s
p *t
n
s
p i
p *t
p i
n
s
n
s
p *t
p *t
n
s
p *t
s
p i
p t->child
n
p *t
s
q
b typeCheck 
r test.cm
s
q
b 
b typeCheck 
r test.cm
n
s
p *t
n
s
p *t
q
b typeCheck 
r test.cm
n
s
n
s
p *t
n
p t->child
n
p *t
n
s
p i
p t->child
s
p *t
n
p i
s
p i
s
s
p *t
s
p *t
s
n
s
p i
s
p *t
s
p t->child
s
p *t
n
s
p *t
s
p (t
p *t
n
s
p i
s
p i
p t->child
p i
n
p *t
p *t->child[0]
s
s
p *t
s
p i
s
p i
p t->child
s
p *t
q
b buildSymtab 
d br 1
b typeCheck 
r test.cm 
s
n
s
p *t
s
n
p i
p *t->child[i]
s
p t->attr.scope
s
n
s
p *t
s
p i
s
p *t
s
p t->child
p *t
s
p *t
n
s
n
s
p i
p t->child
n
p *t
s
p *t
s
p i
s
p *t
s
s
p *t
s
p *t
s
p i
 p*t
p *t
n
s
p *t
s
n
s
s
s
p *t
p *t
p *l
p 
p l
p t->type 
p t->kind.exp
q
b typeCheck 
r test.cm 
s
n
s
n
p *t
n
p *t
p *t->child[0]
p l
q
