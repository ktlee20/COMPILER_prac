p i
s
p *t
s
s
p *t
s
p *t
s
p i
 p*t
p *t
n
s
p *t
s
n
s
s
s
p *t
p *t
p *l
p 
p l
p t->type 
p t->kind.exp
q
b typeCheck 
r test.cm 
s
n
s
n
p *t
n
p *t
p *t->child[0]
p l
q
b typeCheck 
r test.cm
s
s
n
s
p *t
p *t->child[0]
p *t->child[1]
p *t->child[2]
p t->sibling
p *t->sibling
n
s
p *t
p *t->child[2]
n
p i
s
p *t
s
n
s
s
p i
s
p *t
p *t->sibling
n
s
p *t->sibling
n
s
q
b typeCheck
r test.cm
n
s
n
s
p *t
n
s
p *T
p *t
p *t->child[1]
p *t->child[0]
p *t->child[0]->sibling
n
p i
s
p *t
s
p *t
p *t->child[1]
p i
s
n
p i
s
p *t
p t
s
p *t
s
p t->siblig
p t->sibling 
n
s
p *t
s
p i
s
p *t
p *t->child[0]
p *t->child[0]
p *t
q
b typeCheck
q
b typeCheck 
r test.cm
n
s
p *t
p *t->sibling
n
s
p *t
n
s
p *t
s
n
s
p i
s
p *t
n
s
p *t
s
p i
s
p *t
n
s
p *t
p *t->child[0]
s
p *t
p *t->child[0]
s
p *t
n
s
p *t
s
p *t
p t->attr.name
s
n
s
p *l
s
s
p t->child[-]
p t->child[0]
p l->t
p *l->t
p t->child[0]
p *l->t->child[1]
s
p l->t->kind.decl
s
p par2
p par2->type
p par2->tq
q
b typeCheck 
r test.cm
n
s
q
b typeCheck 
r test.cm
n
s
n
s
p *t
p *t->sibling
n
p *t
n
s
p *t
n
s
p *t
n
s
p *t
n
s
p *t
p *t->child[0]
n
s
n
s
p *t
s
p *t->child[0]
s
p *t
s
s
p *t
n
s
p *t
s
s
p key
s
p h1
p h2
s
p *l
s
p *t
s
p *t
n
s
p i
p *t
s
p key
s
p key
s
p h1
p h2
s
s
p *l
s
p *l
p *s
s
p *l
s
p *t
q
