p i
p *t
s
p key
s
p key
s
p h1
p h2
s
s
p *l
s
p *l
p *s
s
p *l
s
p *t
q
b typeCheck 
r test.cm
s
n
s
p *t
q
b typeCheck 
r test.cm
n
s
p (t
p *t
n
s
p *t
n
s
p *t
n
s
p *t
n
s
p *t
n
s
p *t
q
b buildSymtab 
r test.cm
n
s
p *t
n
s
p *t
n
s
p *t
n
s
p *t
n
s
p *t
n
s
p *t
s
p scope
p scope
n
s
p i
s
p i
p *t
p i
p *t->child[0]
n
p i
s
p *t
p *t
n
p i
s
p i
p *t
s
p stack->head->data 
s
p t->sibling 
n
s
p i
s
p i
p *t
s
p *t
r test.cm
n
s
n
s
n
s
n
s
n
s
p *t
n
s
p *t
n
s
p *t
s
p i
s
p i
p *t
p *t->child[0]
s
p t->sibling 
p *t
s
n
s
p i
s
p i
p t->child[0]
p *t->child[0]
n
p i
n
p i
n
s
p t->sibling
n
s
p i
s
p i
p *t->child[1]
s
s
p *t
s
p funname
q
b typeCheck 
r test.cm
s
n
s
n
s
n
s
n
n
s
p *t
n
s
n
s
p *t
n
s
p *t
n
s
p *t
n
p *t->sibling
n
s
p *t
s
p stack->head->data 
s
p *t
n
s
p *t
s
p *t
s
p i
p I
p i
p t->child[i]
p *t->child[i]
n
q
b typeCheck 
r test.cm
n
s
n
s
n
s
n
s
n
n
s
p *t
n
s
p *t
n
s
p *t
n
s
p *t
n
s
p *t
s
p *t
s
p *t
p i
n
s
p i
s
p i
p t->child[i]
s
p *t
s
p 8t
p *t
s
p *t
s
p i
s
p i
p *t
p *t->child[2]
s
p t->attr.scope
q
q
